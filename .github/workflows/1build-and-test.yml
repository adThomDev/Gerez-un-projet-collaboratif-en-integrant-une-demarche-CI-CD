name: Build and Test

on:
  workflow_call:   # Allows this workflow to be called by other workflows (i.e. 0pipeline.yml)

jobs:
  backend:
    name: Backend build and test
    runs-on: ubuntu-latest    # Uses Ubuntu runner for Maven/Java compatibility
    defaults:
      run:
        working-directory: back

    steps:
      - uses: actions/checkout@v4  # Checks out the repository code to the runner

      - name: Set up JDK 17   # Sets up Java Development Kit version 17 for building the backend
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'    # OpenJDK distribution optimized for CI/CD

      - name: Cache Maven packages   # Speeds up builds by caching dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2    # Maven local repository location
          key: ${{ runner.os }}-m2-${{ hashFiles('back/pom.xml') }}   # Cache key based on OS and pom.xml content
          restore-keys: ${{ runner.os }}-m2   # Fallback key if the exact cache is not found

      - name: Build and test with Maven
        run: mvn clean verify    # Builds, runs all tests, and generates coverage report

      - name: Upload compiled classes    # Uploads compiled classes to GitHub Actions to make them available for SonarQube later in the pipeline
        uses: actions/upload-artifact@v4
        with:
          name: backend-classes    # Artifact name
          path: back/target/classes   # Path to the compiled classes directory

      - name: Upload coverage report    # Uploads JaCoCo coverage report to GitHub Actions For SonarQube analysis later in the pipeline
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: back/target/site/jacoco/   # JaCoCo coverage report location

  frontend:
    name: Frontend build and test
    runs-on: ubuntu-latest   # Uses Ubuntu runner for Node.js compatibility
    defaults:
      run:
        working-directory: front

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js # Sets up Node.js environment for building the frontend
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node modules    # Speeds up builds by caching npm dependencies
        uses: actions/cache@v4
        with:
          path: ./front/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('front/package-lock.json') }}    # Cache key based on package-lock.json
          restore-keys: ${{ runner.os }}-node

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test -- --no-watch --browsers=ChromeHeadless --code-coverage

      - name: Upload frontend build    # Uploads build to GitHub Actions to make it available for Docker image creation later in the pipeline
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: front/dist

      - name: Upload coverage report    # Uploads Jasmine coverage report to GitHub Actions For SonarQube analysis later in the pipeline
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-report
          path: front/coverage/bobapp/      # Karma/Jasmine coverage report location
